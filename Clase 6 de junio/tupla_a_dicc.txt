Python – Convert Nested Tuple to Custom Key Dictionary

Sometimes, while working with Python records, we can have data that come 
without proper column names/identifiers, which can just be identified by their index,
but we intend to assign them keys and render in form of dictionaries. 
This kind of problem can have applications in domains such as web development. 
Let’s discuss certain ways in which this task can be performed.

Input : test_tuple = ((1, ‘Gfg’, 2), (3, ‘best’, 4)), keys = [‘key’, ‘value’, ‘id’] 
Output : [{‘key’: 1, ‘value’: ‘Gfg’, ‘id’: 2}, {‘key’: 3, ‘value’: ‘best’, ‘id’: 4}] 

Input : test_tuple = test_tuple = ((1, ‘Gfg’), (2, 3)), keys = [‘key’, ‘value’] 
Output : [{‘key’: 1, ‘value’: ‘Gfg’}, {‘key’: 2, ‘value’: 3}]




Python – Convertir tupla anidada a diccionario con claves personalizadas

A veces, al trabajar con registros en Python, podemos tener datos que vienen 
sin nombres de columna/identificadores adecuados, los cuales solo pueden ser 
identificados por su índice, pero queremos asignarles claves y renderizarlos 
en forma de diccionarios. Este tipo de problema puede tener aplicaciones en 
dominios como el desarrollo web. Vamos a discutir ciertas maneras en las que 
se puede realizar esta tarea.

Entrada:
tupla_prueba = ((1, 'Gfg', 2), (3, 'best', 4)), claves = ['clave', 'valor', 'id']

Salida:
[{'clave': 1, 'valor': 'Gfg', 'id': 2}, {'clave': 3, 'valor': 'best', 'id': 4}]

Entrada:
tupla_prueba = ((1, 'Gfg'), (2, 3)), claves = ['clave', 'valor']

Salida:
[{'clave': 1, 'valor': 'Gfg'}, {'clave': 2, 'valor': 3}]